@charset "UTF-8";

/* 回答はここに書いてね */
.clearfix:after {
  display: block;
  content: "";
  clear: both;
} 

.q1__content {
  width: 900px; 
  margin: 0 auto;
  padding: 20px;
  background-color: #eff3f4;
}

.q1__content__box {
  float: left;
  margin-left: 20px;
  padding: 20px;
  width: 230px;
  background-color: #3274ae; 
}

.q1__content .q1__content__box:first-child {
  margin-left: 0;
} 

.q1__content__text {
  padding: 20px;
  font-size: 16px;
  line-height: 16px; 
  border: 10px solid #022336;
  background-color: #eaf4ff;
}


/*                  ---  Q1をやってみて  ---

layout_parts_newのQ1を手順沿ってやってみてそうでしたか？
わからないとことや、「なんで？」と思うようなところがいくつかあったと思います。
Div Puzzleでやったときの違いや、HTML/CSSを書く上で意識したほうがいいことをここでまとめましたので、参考にしていただければと思います。


- 要素の高さについて
heightは子要素に高さがあれば、親要素で特に指定する必要はありません。
要素はテキストや画像があれば高さを持つので、この場合もあえてheightを指定する必要はありません。
逆に高さを指定してしまうと、中の要素がそれ以上の高さの場合やそれ以下の高さの場合に意図しない表示のされ方をする可能性があります。


- paddingとmarginについて
まず、paddingとは要素の内側の余白で、marginとは要素の外側の余白です。
これはけっこう感覚的に覚えるものではあるのですが、一応使い方としては要素と要素の間の余白はmarginで、要素の内側を広げるのに使う余白はpaddingです。また、marginは隣り合うもの同士の余白として指定しましょう。
指定の仕方としては、
margin: 10px 0 5px 10px; => 上 右 下 左
margin: 10px 0 5px; => 上 左右 下
margin: 10px 5px; => 上下 左右
margin: 10px; => 上下左右
margin-top, margin-bottom, margin-left, margin-rightでそれぞれの指定も可能です。
これはpaddingも同様です。


- 「0px」と書かず、「0」と書く
0というものは、いくら単位をつけても0なので、「0px」とかは書かずに「0」と書きましょう。
どんな単位に対しても言えることです。

- 色の指定について
CSSで色を指定する場合は「white」や「red」と書かずに、「#fff」や「#f00」とカラーコードで書くようにしましょう。基本的には「#ffffff」のように6桁で書くのですが、「#ffffff」の場合には「#fff」、「#ff0000」の場合には「#f00」と省略して書くことが可能です。


*/

/* 回答はここに書いてね */
